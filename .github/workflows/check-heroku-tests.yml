name: Heroku Tests
on:
  workflow_dispatch:
    inputs:
      commit_hash:
        description: 'Hash of git commit to run heroku tests on'
        required: true
  schedule:
  - cron: '0 7 * * 1'  # M H d m w (Mondays at 7:00)

env:
  MLEM_TESTS: "true"

jobs:
  test-heroku:
    needs: authorize
    name: Test ${{ matrix.os }} with py${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.7", "3.8", "3.9"]
        exclude:
        # no HDF5 support installed for tables
        - os: windows-latest
          python: "3.9"
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.commit_hash }}
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: get pip cache dir
      id: pip-cache-dir
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: set pip cache
      id: pip-cache
      uses: actions/cache@v3.0.8
      with:
        path: ${{ steps.pip-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Mac-specific dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install hdf5 wget c-blosc
        wget https://raw.githubusercontent.com/Homebrew/homebrew-core/fb8323f2b170bd4ae97e1bac9bf3e2983af3fdb0/Formula/libomp.rb
        brew install ./libomp.rb
    - name: Install
      if: steps.cache.pip-cache-dir.cache-hit != 'true'
      run: |
        pip install --upgrade pip setuptools wheel
        pip install pre-commit .[tests]
    - run: pre-commit run pylint -a -v --show-diff-on-failure
      if: matrix.python != '3.7'
    - name: Start minikube
      if: matrix.os == 'ubuntu-latest' && matrix.python == '3.9'
      uses: medyagh/setup-minikube@master
    - name: Run tests
      timeout-minutes: 40
      run: pytest tests/contrib/test_heroku.py
      env:
        GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_TEAM: iterative-sandbox
        GITHUB_MATRIX_OS: ${{ matrix.os }}
        GITHUB_MATRIX_PYTHON: ${{ matrix.python }}
        BITBUCKET_USERNAME: ${{ secrets.BITBUCKET_USERNAME }}
        BITBUCKET_PASSWORD: ${{ secrets.BITBUCKET_PASSWORD }}
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
