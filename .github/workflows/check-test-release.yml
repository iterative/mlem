name: Check, test and release
on:
  push:
  pull_request_target:
  schedule:
  - cron: '0 7 * * 1'  # M H d m w (Mondays at 7:00)

env:
  MLEM_TESTS: "true"

jobs:
  authorize:
    if: |
      startsWith(github.ref, 'refs/tags') ||
      github.event_name == 'pull_request_target' ||
      github.event_name == 'schedule' ||
      github.repository_owner != 'iterative'
    environment:
      ${{ (github.event_name == 'pull_request_target' &&
      github.event.pull_request.head.repo.full_name != github.repository) &&
      'external' || 'internal' }}
    runs-on: ubuntu-latest
    steps:
    - run: echo âœ“
  check:
    needs: authorize
    name: Check
    runs-on: ubuntu-latest
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.10.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: set PYSHA
      run: echo "PYSHA=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PYSHA }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - run: pip install -U pre-commit tox
    - run: SKIP=pylint pre-commit run -a --show-diff-on-failure
  test:
    needs: authorize
    name: Test ${{ matrix.os }} with py${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.7", "3.8", "3.9"]
        exclude:
        # no HDF5 support installed for tables
        - os: windows-latest
          python: "3.9"
      fail-fast: true
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: get pip cache dir
      id: pip-cache-dir
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: set pip cache
      id: pip-cache
      uses: actions/cache@v3.0.5
      with:
        path: ${{ steps.pip-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Mac-specific dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install hdf5 wget c-blosc
        wget https://raw.githubusercontent.com/Homebrew/homebrew-core/fb8323f2b170bd4ae97e1bac9bf3e2983af3fdb0/Formula/libomp.rb
        brew install ./libomp.rb
    - name: Install
      if: steps.cache.pip-cache-dir.cache-hit != 'true'
      run: |
        pip install --upgrade pip setuptools wheel
        pip install pre-commit .[tests]
    - run: pre-commit run pylint -a -v --show-diff-on-failure
      if: matrix.python != '3.7'
    - name: Run tests
      timeout-minutes: 40
      run: pytest
      env:
        GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_TEAM: iterative-sandbox
        GITHUB_MATRIX_OS: ${{ matrix.os }}
        GITHUB_MATRIX_PYTHON: ${{ matrix.python }}
        BITBUCKET_USERNAME: ${{ secrets.BITBUCKET_USERNAME }}
        BITBUCKET_PASSWORD: ${{ secrets.BITBUCKET_PASSWORD }}
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
  deploy:
    name: PyPI Deploy
    needs: [check, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - id: dist
      uses: casperdcl/deploy-pypi@v2
      with:
        build: true
        password: ${{ secrets.PYPI_TOKEN }}
        upload: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
    - id: meta
      name: Changelog
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
        git log --pretty='format:%d%n- %s%n%b---' $(git tag --sort=v:refname | tail -n2 | head -n1)..HEAD > _CHANGES.md
    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        name: tpi ${{ steps.meta.outputs.tag }} alpha
        body_path: _CHANGES.md
        draft: true
        files: |
          dist/${{ steps.dist.outputs.whl }}
